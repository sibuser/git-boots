#!/bin/bash
# Copyright (c) 2012, Alexander Krasnukhin <the.malkolm@gmail.com>

OPTIONS_SPEC="
$(basename $0) <upstream> [<branch>...]
--
 Available options are
h,help            Show help
v,verbose         Be verbose
m,merge           Merge with <master> after bubbled up
p,push            Push <master> after merge
"

SUBDIRECTORY_OK=yes
USAGE=
LONG_USAGE="
DESCRIPTION

Lets you automate process of rebasing your <branch> on top of freshly updated
<upstream>. Basically it's the same as git-rebase with automatic <upstream>
update.

Thats what script conceptually does (assuming standard layout):

    \$ git checkout master
    \$ git pull --rebase origin master # only if ff
    \$ git checkout topic
    \$ git rebase master # probably solve conflicts

Nevertheless you can use this script as it will automatically solve some issues
that happens again and again for some git users.

Script tries to mimic git-rebase argument order i.e.

    \$ git-rebase develop       -> \$ $(basename $0) develop
    \$ git-rebase develop topic -> \$ $(basename $0) develop topic

EXAMPLES

    Rebase current branch on top of freshly updated master

        \$ $(basename $0) master

    Rebase topic branch on top of freshly updated master

        \$ $(basename $0) master topic

    Rebase all branches matching topic/* on top of freshly updated master

        \$ $(basename $0) master topic/*
"

